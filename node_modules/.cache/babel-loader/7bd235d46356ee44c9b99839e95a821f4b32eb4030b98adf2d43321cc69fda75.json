{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";const tasks=[{id:1,text:\"todo1\",complete:true},{id:2,text:\"todo2\",complete:false},{id:3,text:\"todo3\",complete:true},{id:4,text:\"todo4\",complete:false}];const todoSlice=createSlice({name:\"Todo\",initialState:tasks,reducers:{addTodo:(state,action)=>{state.push({id:state.length?state[state.length-1].id+1:1,text:action.payload,completed:false});},deleteTodo:(state,action)=>{return state.filter(task=>task.id!==action.payload);},completedTodo:(state,action)=>{let element=state.find(x=>x.id===action.payload);element.completed=true;}}});export const{addTodo,deleteTodo,editTodo,completedTodo}=todoSlice.actions;export default todoSlice.reducer;","map":{"version":3,"names":["createSlice","tasks","id","text","complete","todoSlice","name","initialState","reducers","addTodo","state","action","push","length","payload","completed","deleteTodo","filter","task","completedTodo","element","find","x","editTodo","actions","reducer"],"sources":["C:/Users/amala/OneDrive/Desktop/redux_task/src/redux/todoSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst tasks = [\r\n        {id:1 , text:\"todo1\" , complete:true},\r\n        {id:2 , text:\"todo2\" , complete:false},\r\n        {id:3 , text:\"todo3\" , complete:true},\r\n        {id:4 , text:\"todo4\" , complete:false}\r\n    ]\r\nconst todoSlice = createSlice({\r\n    name:\"Todo\",\r\n    initialState : tasks ,\r\n    reducers:{\r\n        addTodo : ( state , action )=>{\r\n            state.push({ \r\n                id: state.length? state[state.length - 1].id + 1 : 1 ,\r\n                text : action.payload ,\r\n                completed:false\r\n            })\r\n        },\r\n        deleteTodo : ( state , action )=>{\r\n            return state.filter((task)=> task.id !== action.payload )\r\n        },\r\n        completedTodo : ( state , action )=>{\r\n            let element = state.find(x=>x.id === action.payload )\r\n            element.completed = true;\r\n        }\r\n    }\r\n})\r\nexport const { addTodo, deleteTodo , editTodo,completedTodo } = todoSlice.actions;\r\nexport default todoSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,KAAM,CAAAC,KAAK,CAAG,CACN,CAACC,EAAE,CAAC,CAAC,CAAGC,IAAI,CAAC,OAAO,CAAGC,QAAQ,CAAC,IAAI,CAAC,CACrC,CAACF,EAAE,CAAC,CAAC,CAAGC,IAAI,CAAC,OAAO,CAAGC,QAAQ,CAAC,KAAK,CAAC,CACtC,CAACF,EAAE,CAAC,CAAC,CAAGC,IAAI,CAAC,OAAO,CAAGC,QAAQ,CAAC,IAAI,CAAC,CACrC,CAACF,EAAE,CAAC,CAAC,CAAGC,IAAI,CAAC,OAAO,CAAGC,QAAQ,CAAC,KAAK,CAAC,CACzC,CACL,KAAM,CAAAC,SAAS,CAAGL,WAAW,CAAC,CAC1BM,IAAI,CAAC,MAAM,CACXC,YAAY,CAAGN,KAAK,CACpBO,QAAQ,CAAC,CACLC,OAAO,CAAGA,CAAEC,KAAK,CAAGC,MAAM,GAAI,CAC1BD,KAAK,CAACE,IAAI,CAAC,CACPV,EAAE,CAAEQ,KAAK,CAACG,MAAM,CAAEH,KAAK,CAACA,KAAK,CAACG,MAAM,CAAG,CAAC,CAAC,CAACX,EAAE,CAAG,CAAC,CAAG,CAAC,CACpDC,IAAI,CAAGQ,MAAM,CAACG,OAAO,CACrBC,SAAS,CAAC,KACd,CAAC,CAAC,CACN,CAAC,CACDC,UAAU,CAAGA,CAAEN,KAAK,CAAGC,MAAM,GAAI,CAC7B,MAAO,CAAAD,KAAK,CAACO,MAAM,CAAEC,IAAI,EAAIA,IAAI,CAAChB,EAAE,GAAKS,MAAM,CAACG,OAAQ,CAAC,CAC7D,CAAC,CACDK,aAAa,CAAGA,CAAET,KAAK,CAAGC,MAAM,GAAI,CAChC,GAAI,CAAAS,OAAO,CAAGV,KAAK,CAACW,IAAI,CAACC,CAAC,EAAEA,CAAC,CAACpB,EAAE,GAAKS,MAAM,CAACG,OAAQ,CAAC,CACrDM,OAAO,CAACL,SAAS,CAAG,IAAI,CAC5B,CACJ,CACJ,CAAC,CAAC,CACF,MAAO,MAAM,CAAEN,OAAO,CAAEO,UAAU,CAAGO,QAAQ,CAACJ,aAAc,CAAC,CAAGd,SAAS,CAACmB,OAAO,CACjF,cAAe,CAAAnB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}