{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst tasks = [{\n  id: 1,\n  text: \"todo1\",\n  complete: true\n}, {\n  id: 2,\n  text: \"todo2\",\n  complete: false\n}, {\n  id: 3,\n  text: \"todo3\",\n  complete: true\n}, {\n  id: 4,\n  text: \"todo4\",\n  complete: false\n}];\nconst todoSlice = createSlice({\n  name: \"Todo\",\n  initialState: tasks,\n  reducers: {\n    addTodo: (state, action) => {\n      state.push({\n        id: state.length + 1,\n        text: action.payload,\n        completed: false\n      });\n    },\n    deleteTodo: (state, action) => {\n      return state.filter(task => task.id !== action.payload);\n    },\n    editTodo: (state, action) => {},\n    completedTodo: (state, action) => {\n      let element = state.find(x => x.id == action.payload.id);\n    }\n  }\n});\nexport const {\n  addTodo,\n  deleteTodo,\n  editTodo\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","tasks","id","text","complete","todoSlice","name","initialState","reducers","addTodo","state","action","push","length","payload","completed","deleteTodo","filter","task","editTodo","completedTodo","element","find","x","actions","reducer"],"sources":["C:/Users/amala/OneDrive/Desktop/study/redux_task/src/redux/todoSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst tasks = [\r\n        {id:1 , text:\"todo1\" , complete:true},\r\n        {id:2 , text:\"todo2\" , complete:false},\r\n        {id:3 , text:\"todo3\" , complete:true},\r\n        {id:4 , text:\"todo4\" , complete:false}\r\n    ]\r\nconst todoSlice = createSlice({\r\n    name:\"Todo\",\r\n    initialState : tasks ,\r\n    reducers:{\r\n        addTodo : ( state , action )=>{\r\n            state.push({ \r\n                id: state.length + 1 ,\r\n                text : action.payload ,\r\n                completed:false\r\n            })\r\n        },\r\n        deleteTodo : ( state , action )=>{\r\n            return state.filter((task)=> task.id !== action.payload )\r\n        },\r\n        editTodo : ( state , action )=>{\r\n            \r\n        },\r\n        completedTodo : ( state , action )=>{\r\n            let element = state.find(x=>x.id == action.payload.id)\r\n        }\r\n    }\r\n})\r\nexport const { addTodo, deleteTodo , editTodo } = todoSlice.actions;\r\nexport default todoSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,KAAK,GAAG,CACN;EAACC,EAAE,EAAC,CAAC;EAAGC,IAAI,EAAC,OAAO;EAAGC,QAAQ,EAAC;AAAI,CAAC,EACrC;EAACF,EAAE,EAAC,CAAC;EAAGC,IAAI,EAAC,OAAO;EAAGC,QAAQ,EAAC;AAAK,CAAC,EACtC;EAACF,EAAE,EAAC,CAAC;EAAGC,IAAI,EAAC,OAAO;EAAGC,QAAQ,EAAC;AAAI,CAAC,EACrC;EAACF,EAAE,EAAC,CAAC;EAAGC,IAAI,EAAC,OAAO;EAAGC,QAAQ,EAAC;AAAK,CAAC,CACzC;AACL,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAC,MAAM;EACXC,YAAY,EAAGN,KAAK;EACpBO,QAAQ,EAAC;IACLC,OAAO,EAAGA,CAAEC,KAAK,EAAGC,MAAM,KAAI;MAC1BD,KAAK,CAACE,IAAI,CAAC;QACPV,EAAE,EAAEQ,KAAK,CAACG,MAAM,GAAG,CAAC;QACpBV,IAAI,EAAGQ,MAAM,CAACG,OAAO;QACrBC,SAAS,EAAC;MACd,CAAC,CAAC;IACN,CAAC;IACDC,UAAU,EAAGA,CAAEN,KAAK,EAAGC,MAAM,KAAI;MAC7B,OAAOD,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAAChB,EAAE,KAAKS,MAAM,CAACG,OAAQ,CAAC;IAC7D,CAAC;IACDK,QAAQ,EAAGA,CAAET,KAAK,EAAGC,MAAM,KAAI,CAE/B,CAAC;IACDS,aAAa,EAAGA,CAAEV,KAAK,EAAGC,MAAM,KAAI;MAChC,IAAIU,OAAO,GAAGX,KAAK,CAACY,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACrB,EAAE,IAAIS,MAAM,CAACG,OAAO,CAACZ,EAAE,CAAC;IAC1D;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAEO,OAAO;EAAEO,UAAU;EAAGG;AAAS,CAAC,GAAGd,SAAS,CAACmB,OAAO;AACnE,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}